---
format:
  html:
    code-fold: false
jupyter: python3
execute:
  cache: true # re-render only when source changes
---

# Candlestick Charts, Revisited

We have [previously studied](https://prof-rossetti.github.io/intro-software-dev-python-book/notes/dataviz/candlesticks.html) how to create candlestick charts using OHLC data. We can do this with tabular data as well.

Converting OHLC data to `DataFrame` object:

```{python}
from pandas import DataFrame

ohlc_data = [
    {"date": "2030-03-16", "open": 236.2800, "high": 240.0550, "low": 235.9400, "close": 237.7100, "volume": 28092196},
    {"date": "2030-03-15", "open": 234.9600, "high": 235.1850, "low": 231.8100, "close": 234.8100, "volume": 26042669},
    {"date": "2030-03-12", "open": 234.0100, "high": 235.8200, "low": 233.2300, "close": 235.7500, "volume": 22653662},
    {"date": "2030-03-11", "open": 234.9600, "high": 239.1700, "low": 234.3100, "close": 237.1300, "volume": 29907586},
    {"date": "2030-03-10", "open": 237.0000, "high": 237.0000, "low": 232.0400, "close": 232.4200, "volume": 29746812}
]
df = DataFrame(ohlc_data)
df.head()
```

Because the `Candlestick` class comes from the Graph Objects sub-library, instead of passing the `DataFrame` object, we pass the columns directly:

```{python}
from plotly.graph_objects import Figure, Candlestick

stick = Candlestick(x=df["date"],
                    open=df["open"],
                    high=df["high"],
                    low=df["low"],
                    close=df["close"]
)

fig = Figure(data=[stick])
fig.update_layout(title="Example Candlestick Chart")
fig.show()
```
