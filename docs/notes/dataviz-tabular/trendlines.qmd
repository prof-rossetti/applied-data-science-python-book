---
format:
  html:
    code-fold: false
jupyter: python3
execute:
  cache: true # re-render only when source changes
---

# Scatter Plot with Trendlines, Revisited

We have [previously studied](https://prof-rossetti.github.io/intro-software-dev-python-book/notes/dataviz/trendlines.html) how to create scatter plots with trendlines. We can do this with tabular data as well.

Constructing a `DataFrame` from raw data:

```{python}
from pandas import DataFrame

scatter_data = [
    {"income": 30_000, "life_expectancy": 65.5},
    {"income": 35_000, "life_expectancy": 62.1},
    {"income": 50_000, "life_expectancy": 66.7},
    {"income": 55_000, "life_expectancy": 71.0},
    {"income": 70_000, "life_expectancy": 72.5},
    {"income": 75_000, "life_expectancy": 77.3},
    {"income": 90_000, "life_expectancy": 82.9},
    {"income": 95_000, "life_expectancy": 80.0},
]
df = DataFrame(scatter_data)
df.head()
```

Linear trends:

```{python}
from plotly.express import scatter

fig = scatter(df, x="income", y="life_expectancy", height=350,
                title="Life Expectancy by Income",
                labels={"x": "Income", "life_expectancy": "Life Expectancy (years)"},
                trendline="ols", trendline_color_override="red"
)
fig.show()
```

Non-linear trends:


```{python}
fig = scatter(df, x="income", y="life_expectancy", height=350,
                title="Life Expectancy by Income",
                labels={"x": "Income", "life_expectancy": "Life Expectancy (years)"},
                trendline="lowess", trendline_color_override="red"
)
fig.show()
```
